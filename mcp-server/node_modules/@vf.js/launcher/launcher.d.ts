declare module '@vf.js/launcher'{
    /**
     * 外部钩子
     */
    export interface APIHook {
        /**
         * 日志与错误时的回调
         * @param err
         */
        onError(evt: vf.IEvent): void;
        /**
         * 初始化完成时回调
         * @param err
         */
        onInit(): void;
        /**
         * 准备工作完成时回调 （资源加载完成）
         */
        onReady(): void;
        /**
         * 场景加载
         */
        onSceneLoad(): void;
        /**
         * 场景加载进度
         */
        onSceneLoadProgress(msg: vf.IEvent): void;
        /**
         * 场景加载完成时回调
         */
        onSceneCreate(): void;
        /**
         * 信令或其他消息回调
         */
        onMessage(msg: vf.IEvent): void;
        /**
         * 卸载时触发
         */
        onDispose(): void;
    }

    /**
     * 外部函数
     */
    export interface APICommand {
        /**
         * 播放（播放地址|播放数据|恢复播放）
         * @param src
         */
        play(src?: any): void;
        /**
         * 卸载
         * @param boolean
         */
        dispose(boolean?: boolean): void;
        /**
         * 暂停
         */
        pause(): void;
        /**
         * 恢复
         */
        resume(): void;
        /**
         * 重置
         */
        reset(): void;
        /**
         * 设置消息
         * @param msg
         */
        message(msg: vf.IEvent): void;
        /**
         * 切换场景
         * @param transition
         */
        switchToNextScene(transition?: any): void;
        /**
         * 切换场景
         * @param transition
         */
        switchToPrevScene(transition?: any): void;
        /**
         * 切换场景
         * @param transition
         */
        switchToSceneId(sceneId: string, transition?: any): void;
        /**
         * 切换场景
         * @param transition
         */
        switchToSceneIndex(index: number, transition?: any): void;
    }
    export interface EngineAPI extends APIHook, APICommand {
        app?: vf.Application;
        uiStage?: vf.gui.Stage;
    }

    export interface IDebugOption {
        debugVFPath?: string;
        debugGuiPath?: string;
        debugPlayerPath?: string;
        showFPS?: boolean;
        debug?: boolean;
        showConsole?: boolean;
    }
    export interface IVFOptions extends IDebugOption{
        container: HTMLElement;
        id?: string;
        src?: string;
        play?: boolean;
        loop?: boolean;
        scaleMode?: 'showAll' | 'noScale' | 'cover' | 'contain';
        wmode?: string;
        bgcolor?: string;
        vfvars?: any;
        frameRate?: number;
        width?: number;
        height?: number;
        maxTouches?: number;
        language?: string;
        realFPS?: boolean;
        /**
         * 动态数据
         */
        conversionData?: any;
        /**
         * 内置插件
         */
        plugs?: any[];
        /**
         * 外部库,使用[url,url,url...]
         */
        libs?: string[];
        /**
         * loading动画位置
         */
        // eslint-disable-next-line max-len
        loading?: {position: any ;image?: any} ;
        /**
         * 分辨率 devicePixelRatio
         */
        resolution?: number;
        /**
         * 强制使用Canvas 渲染
         */
        forceCanvas?: boolean;
        /**
         * 需要排除的类库文件: 'gui','player'
         */
        exclude?: string[];
        /**
         * 需要强制降级的设备
         * 示例：degradeDevice = [{name:"iPad2",version:8.2,format:png,scale:80}]
         */
        degradeDevice?: {name: string; version?: number; format?: string; scale?: number}[];
    }

    // eslint-disable-next-line max-len
    export function createVF(options: IVFOptions, completeCall: (player: EngineAPI) => void, errorCall?: (e: any) => void): void;

    export function deleteVF(): void;
}

